# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CY-E6JWSohnuH0TOc2I972RSCTBktVmW
"""

import numpy as np
import matplotlib.pyplot as plt
from PIL import Image  # Import the PIL library

def load_image_into_numpy_array(image_path):
    """Loads an image from a path and returns it as a NumPy array."""
    try:
        img = Image.open(image_path)  #Open the image using PIL
        return np.array(img)  # Convert the image to a NumPy array
    except FileNotFoundError:
        print(f"Error: Image file '{image_path}' not found.")
        return None
    except Exception as e:
        print(f"Error loading image: {e}")
        return None

# Replace 'your_image.jpg' with the actual path to your image
image_path = 'images.jpg'
img_array = load_image_into_numpy_array(image_path)

if img_array is None:
    print("Exiting due to image loading error.")
else:
    print(f"Image shape: {img_array.shape}")
# Display the original image
plt.imshow(img_array)
plt.title('Original Image')
plt.axis('off')  # Hide axis ticks and labels
plt.show()
# Rotate the image by 90 degrees
rotated_img = np.rot90(img_array)

# Flip the image horizontally
flipped_img = np.fliplr(img_array)

# Display the rotated image
plt.imshow(rotated_img)
plt.title('Rotated Image (90 degrees)')
plt.axis('off')
plt.show()

# Display the flipped image
plt.imshow(flipped_img)
plt.title('Flipped Image (Horizontally)')
plt.axis('off')
plt.show()
# Apply grayscale conversion
def convert_to_grayscale(img_array):
    """Converts a NumPy image array to grayscale."""
    # Grayscale conversion formula: Y = 0.299*R + 0.587*G + 0.114*B
    return np.dot(img_array[..., :3], [0.299, 0.587, 0.114])

gray_img = convert_to_grayscale(img_array)

# Display the grayscale image
plt.imshow(gray_img, cmap='gray')  # Use cmap='gray' for grayscale images
plt.title('Grayscale Image')
plt.axis('off')
plt.show()