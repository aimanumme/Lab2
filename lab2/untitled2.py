# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v3OaCAV3lhthv8ABXm9z3nrAfwTxVXK7
"""

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def read_helix_sequence(filename):
    """Reads a helix sequence from a file and returns it as a string."""
    try:
        with open(filename, 'r') as file:
            genome_sequence = file.read().strip()  # Read and remove leading/trailing whitespace
        return genome_sequence
    except FileNotFoundError:
        print(f"Error: File '{filename}' not found.")
        return None

def assign_colors(sequence):
    """Assigns colors to each base in the sequence."""
    colors = []
    for base in sequence:
        if base == 'A':
            colors.append('red')
        elif base == 'T':
            colors.append('blue')
        elif base == 'C':
            colors.append('green')
        elif base == 'G':
            colors.append('yellow')
        else:
            colors.append('gray')  # Handle unexpected characters
    return colors

# --- Main Execution ---
filename = 'genome.txt'  # OR 'genome' if there's no extension
genome_sequence = read_helix_sequence(filename)

if genome_sequence:
    genome_length = len(genome_sequence)

    # Generate Helix Coordinates
    t = np.linspace(0, 4 * np.pi, genome_length)
    x = np.cos(t)
    y = np.sin(t)
    z = np.linspace(0, 5, genome_length)
    coordinates = np.column_stack((x, y, z))

    # Assign Colors
    colors = assign_colors(genome_sequence)

    # Create 3D Plot
    fig = plt.figure(figsize=(12, 8))
    ax = fig.add_subplot(111, projection='3d')
    ax.scatter(coordinates[:, 0], coordinates[:, 1], coordinates[:, 2], c=colors, marker='o')
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')
    ax.set_title('3D Helix Structure')
    plt.show()
else:
    print("Could not read helix sequence.  Exiting.")